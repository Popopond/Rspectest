name: CI

on:
  # pull_request:
  push:
    branches: 
      - main

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4'
          bundler-cache: true
        run: bundle exec rake

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips sqlite3

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
        run: bin/rails db:test:prepare test test:system
        continue-on-error: true
        id: test-results

      - name: Post test result comment with Ruby
        if: always()
        run: |
          gem install octokit
          ruby -e "
          require 'octokit'

          passed = ENV['OUTCOME'] == 'success'
          comment = passed ? ':white_check_mark: All tests passed! :tada:' : ':x: Some tests failed. Please check the details.'

          pr_number = ENV['GITHUB_REF'].match(/refs\/pull\/(\d+)\/merge/)&.captures&.first

          if pr_number
            client = Octokit::Client.new(access_token: ENV['GITHUB_TOKEN'])
            client.add_comment(ENV['GITHUB_REPOSITORY'], pr_number, comment)
          else
            puts comment
          end
          "
        env:
          OUTCOME: ${{ steps.test-results.outcome }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REPOSITORY: ${{ github.repository }}
